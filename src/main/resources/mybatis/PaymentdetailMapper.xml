<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="qlw.mapper.PaymentdetailMapper" >
  <resultMap id="BaseResultMap" type="qlw.model.Paymentdetail" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="patientid" property="patientid" jdbcType="BIGINT" />
    <result column="patientname" property="patientname" jdbcType="VARCHAR" />
    <result column="payname" property="payname" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="format" property="format" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="doctorname" property="doctorname" jdbcType="VARCHAR" />
    <result column="departmentname" property="departmentname" jdbcType="VARCHAR" />
    <result column="doctorid" property="doctorid" jdbcType="BIGINT" />
    <result column="departmentid" property="departmentid" jdbcType="BIGINT" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="paytype" property="paytype" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="BIGINT" />
    <result column="uname" property="uname" jdbcType="VARCHAR" />
    <result column="paynumber" property="paynumber" jdbcType="VARCHAR" />
    <result column="invoicenumber" property="invoicenumber" jdbcType="VARCHAR" />
    <result column="createdate" property="createdate" jdbcType="VARCHAR" />
    <result column="paydate" property="paydate" jdbcType="VARCHAR" />
    <result column="hospitalid" property="hospitalid" jdbcType="BIGINT" />
    <result column="hospitalname" property="hospitalname" jdbcType="VARCHAR" />
    <result column="projectid" property="projectid" jdbcType="BIGINT" />
    <result column="projecttype" property="projecttype" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, patientid, patientname, payname, count, format, unit, price, doctorname, departmentname, 
    doctorid, departmentid, money, status, paytype, uid, uname, paynumber, invoicenumber, 
    createdate, paydate, hospitalid, hospitalname, projectid, projecttype
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="qlw.model.PaymentdetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from paymentdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from paymentdetail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from paymentdetail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="qlw.model.PaymentdetailExample" >
    delete from paymentdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="qlw.model.Paymentdetail" >
    insert into paymentdetail (id, patientid, patientname, 
      payname, count, format, 
      unit, price, doctorname, 
      departmentname, doctorid, departmentid, 
      money, status, paytype, 
      uid, uname, paynumber, 
      invoicenumber, createdate, paydate, 
      hospitalid, hospitalname, projectid, 
      projecttype)
    values (#{id,jdbcType=BIGINT}, #{patientid,jdbcType=BIGINT}, #{patientname,jdbcType=VARCHAR}, 
      #{payname,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{format,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{doctorname,jdbcType=VARCHAR}, 
      #{departmentname,jdbcType=VARCHAR}, #{doctorid,jdbcType=BIGINT}, #{departmentid,jdbcType=BIGINT}, 
      #{money,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{paytype,jdbcType=INTEGER}, 
      #{uid,jdbcType=BIGINT}, #{uname,jdbcType=VARCHAR}, #{paynumber,jdbcType=VARCHAR}, 
      #{invoicenumber,jdbcType=VARCHAR}, #{createdate,jdbcType=VARCHAR}, #{paydate,jdbcType=VARCHAR}, 
      #{hospitalid,jdbcType=BIGINT}, #{hospitalname,jdbcType=VARCHAR}, #{projectid,jdbcType=BIGINT}, 
      #{projecttype,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="qlw.model.Paymentdetail" >
    insert into paymentdetail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="patientid != null" >
        patientid,
      </if>
      <if test="patientname != null" >
        patientname,
      </if>
      <if test="payname != null" >
        payname,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="format != null" >
        format,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="doctorname != null" >
        doctorname,
      </if>
      <if test="departmentname != null" >
        departmentname,
      </if>
      <if test="doctorid != null" >
        doctorid,
      </if>
      <if test="departmentid != null" >
        departmentid,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="paytype != null" >
        paytype,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="uname != null" >
        uname,
      </if>
      <if test="paynumber != null" >
        paynumber,
      </if>
      <if test="invoicenumber != null" >
        invoicenumber,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
      <if test="paydate != null" >
        paydate,
      </if>
      <if test="hospitalid != null" >
        hospitalid,
      </if>
      <if test="hospitalname != null" >
        hospitalname,
      </if>
      <if test="projectid != null" >
        projectid,
      </if>
      <if test="projecttype != null" >
        projecttype,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="patientid != null" >
        #{patientid,jdbcType=BIGINT},
      </if>
      <if test="patientname != null" >
        #{patientname,jdbcType=VARCHAR},
      </if>
      <if test="payname != null" >
        #{payname,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="format != null" >
        #{format,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="doctorname != null" >
        #{doctorname,jdbcType=VARCHAR},
      </if>
      <if test="departmentname != null" >
        #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="doctorid != null" >
        #{doctorid,jdbcType=BIGINT},
      </if>
      <if test="departmentid != null" >
        #{departmentid,jdbcType=BIGINT},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="paytype != null" >
        #{paytype,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="paynumber != null" >
        #{paynumber,jdbcType=VARCHAR},
      </if>
      <if test="invoicenumber != null" >
        #{invoicenumber,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=VARCHAR},
      </if>
      <if test="paydate != null" >
        #{paydate,jdbcType=VARCHAR},
      </if>
      <if test="hospitalid != null" >
        #{hospitalid,jdbcType=BIGINT},
      </if>
      <if test="hospitalname != null" >
        #{hospitalname,jdbcType=VARCHAR},
      </if>
      <if test="projectid != null" >
        #{projectid,jdbcType=BIGINT},
      </if>
      <if test="projecttype != null" >
        #{projecttype,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="qlw.model.PaymentdetailExample" resultType="java.lang.Integer" >
    select count(*) from paymentdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update paymentdetail
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.patientid != null" >
        patientid = #{record.patientid,jdbcType=BIGINT},
      </if>
      <if test="record.patientname != null" >
        patientname = #{record.patientname,jdbcType=VARCHAR},
      </if>
      <if test="record.payname != null" >
        payname = #{record.payname,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.format != null" >
        format = #{record.format,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null" >
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.doctorname != null" >
        doctorname = #{record.doctorname,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentname != null" >
        departmentname = #{record.departmentname,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorid != null" >
        doctorid = #{record.doctorid,jdbcType=BIGINT},
      </if>
      <if test="record.departmentid != null" >
        departmentid = #{record.departmentid,jdbcType=BIGINT},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.paytype != null" >
        paytype = #{record.paytype,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.uname != null" >
        uname = #{record.uname,jdbcType=VARCHAR},
      </if>
      <if test="record.paynumber != null" >
        paynumber = #{record.paynumber,jdbcType=VARCHAR},
      </if>
      <if test="record.invoicenumber != null" >
        invoicenumber = #{record.invoicenumber,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        createdate = #{record.createdate,jdbcType=VARCHAR},
      </if>
      <if test="record.paydate != null" >
        paydate = #{record.paydate,jdbcType=VARCHAR},
      </if>
      <if test="record.hospitalid != null" >
        hospitalid = #{record.hospitalid,jdbcType=BIGINT},
      </if>
      <if test="record.hospitalname != null" >
        hospitalname = #{record.hospitalname,jdbcType=VARCHAR},
      </if>
      <if test="record.projectid != null" >
        projectid = #{record.projectid,jdbcType=BIGINT},
      </if>
      <if test="record.projecttype != null" >
        projecttype = #{record.projecttype,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update paymentdetail
    set id = #{record.id,jdbcType=BIGINT},
      patientid = #{record.patientid,jdbcType=BIGINT},
      patientname = #{record.patientname,jdbcType=VARCHAR},
      payname = #{record.payname,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      format = #{record.format,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      doctorname = #{record.doctorname,jdbcType=VARCHAR},
      departmentname = #{record.departmentname,jdbcType=VARCHAR},
      doctorid = #{record.doctorid,jdbcType=BIGINT},
      departmentid = #{record.departmentid,jdbcType=BIGINT},
      money = #{record.money,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      paytype = #{record.paytype,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=BIGINT},
      uname = #{record.uname,jdbcType=VARCHAR},
      paynumber = #{record.paynumber,jdbcType=VARCHAR},
      invoicenumber = #{record.invoicenumber,jdbcType=VARCHAR},
      createdate = #{record.createdate,jdbcType=VARCHAR},
      paydate = #{record.paydate,jdbcType=VARCHAR},
      hospitalid = #{record.hospitalid,jdbcType=BIGINT},
      hospitalname = #{record.hospitalname,jdbcType=VARCHAR},
      projectid = #{record.projectid,jdbcType=BIGINT},
      projecttype = #{record.projecttype,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="qlw.model.Paymentdetail" >
    update paymentdetail
    <set >
      <if test="patientid != null" >
        patientid = #{patientid,jdbcType=BIGINT},
      </if>
      <if test="patientname != null" >
        patientname = #{patientname,jdbcType=VARCHAR},
      </if>
      <if test="payname != null" >
        payname = #{payname,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="format != null" >
        format = #{format,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="doctorname != null" >
        doctorname = #{doctorname,jdbcType=VARCHAR},
      </if>
      <if test="departmentname != null" >
        departmentname = #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="doctorid != null" >
        doctorid = #{doctorid,jdbcType=BIGINT},
      </if>
      <if test="departmentid != null" >
        departmentid = #{departmentid,jdbcType=BIGINT},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="paytype != null" >
        paytype = #{paytype,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="uname != null" >
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="paynumber != null" >
        paynumber = #{paynumber,jdbcType=VARCHAR},
      </if>
      <if test="invoicenumber != null" >
        invoicenumber = #{invoicenumber,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=VARCHAR},
      </if>
      <if test="paydate != null" >
        paydate = #{paydate,jdbcType=VARCHAR},
      </if>
      <if test="hospitalid != null" >
        hospitalid = #{hospitalid,jdbcType=BIGINT},
      </if>
      <if test="hospitalname != null" >
        hospitalname = #{hospitalname,jdbcType=VARCHAR},
      </if>
      <if test="projectid != null" >
        projectid = #{projectid,jdbcType=BIGINT},
      </if>
      <if test="projecttype != null" >
        projecttype = #{projecttype,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="qlw.model.Paymentdetail" >
    update paymentdetail
    set patientid = #{patientid,jdbcType=BIGINT},
      patientname = #{patientname,jdbcType=VARCHAR},
      payname = #{payname,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      format = #{format,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      doctorname = #{doctorname,jdbcType=VARCHAR},
      departmentname = #{departmentname,jdbcType=VARCHAR},
      doctorid = #{doctorid,jdbcType=BIGINT},
      departmentid = #{departmentid,jdbcType=BIGINT},
      money = #{money,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      paytype = #{paytype,jdbcType=INTEGER},
      uid = #{uid,jdbcType=BIGINT},
      uname = #{uname,jdbcType=VARCHAR},
      paynumber = #{paynumber,jdbcType=VARCHAR},
      invoicenumber = #{invoicenumber,jdbcType=VARCHAR},
      createdate = #{createdate,jdbcType=VARCHAR},
      paydate = #{paydate,jdbcType=VARCHAR},
      hospitalid = #{hospitalid,jdbcType=BIGINT},
      hospitalname = #{hospitalname,jdbcType=VARCHAR},
      projectid = #{projectid,jdbcType=BIGINT},
      projecttype = #{projecttype,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>