<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="qlw.mapper.DepartmentqueueMapper" >
  <resultMap id="BaseResultMap" type="qlw.model.Departmentqueue" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="departmentname" property="departmentname" jdbcType="VARCHAR" />
    <result column="departmentid" property="departmentid" jdbcType="BIGINT" />
    <result column="hospitalname" property="hospitalname" jdbcType="VARCHAR" />
    <result column="hospitalid" property="hospitalid" jdbcType="BIGINT" />
    <result column="nowcount" property="nowcount" jdbcType="INTEGER" />
    <result column="avgtime" property="avgtime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, departmentname, departmentid, hospitalname, hospitalid, nowcount, avgtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="qlw.model.DepartmentqueueExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from departmentqueue
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from departmentqueue
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from departmentqueue
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="qlw.model.DepartmentqueueExample" >
    delete from departmentqueue
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="qlw.model.Departmentqueue" >
    insert into departmentqueue (id, departmentname, departmentid, 
      hospitalname, hospitalid, nowcount, 
      avgtime)
    values (#{id,jdbcType=BIGINT}, #{departmentname,jdbcType=VARCHAR}, #{departmentid,jdbcType=BIGINT}, 
      #{hospitalname,jdbcType=VARCHAR}, #{hospitalid,jdbcType=BIGINT}, #{nowcount,jdbcType=INTEGER}, 
      #{avgtime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="qlw.model.Departmentqueue" >
    insert into departmentqueue
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="departmentname != null" >
        departmentname,
      </if>
      <if test="departmentid != null" >
        departmentid,
      </if>
      <if test="hospitalname != null" >
        hospitalname,
      </if>
      <if test="hospitalid != null" >
        hospitalid,
      </if>
      <if test="nowcount != null" >
        nowcount,
      </if>
      <if test="avgtime != null" >
        avgtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="departmentname != null" >
        #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null" >
        #{departmentid,jdbcType=BIGINT},
      </if>
      <if test="hospitalname != null" >
        #{hospitalname,jdbcType=VARCHAR},
      </if>
      <if test="hospitalid != null" >
        #{hospitalid,jdbcType=BIGINT},
      </if>
      <if test="nowcount != null" >
        #{nowcount,jdbcType=INTEGER},
      </if>
      <if test="avgtime != null" >
        #{avgtime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="qlw.model.DepartmentqueueExample" resultType="java.lang.Integer" >
    select count(*) from departmentqueue
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update departmentqueue
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.departmentname != null" >
        departmentname = #{record.departmentname,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentid != null" >
        departmentid = #{record.departmentid,jdbcType=BIGINT},
      </if>
      <if test="record.hospitalname != null" >
        hospitalname = #{record.hospitalname,jdbcType=VARCHAR},
      </if>
      <if test="record.hospitalid != null" >
        hospitalid = #{record.hospitalid,jdbcType=BIGINT},
      </if>
      <if test="record.nowcount != null" >
        nowcount = #{record.nowcount,jdbcType=INTEGER},
      </if>
      <if test="record.avgtime != null" >
        avgtime = #{record.avgtime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update departmentqueue
    set id = #{record.id,jdbcType=BIGINT},
      departmentname = #{record.departmentname,jdbcType=VARCHAR},
      departmentid = #{record.departmentid,jdbcType=BIGINT},
      hospitalname = #{record.hospitalname,jdbcType=VARCHAR},
      hospitalid = #{record.hospitalid,jdbcType=BIGINT},
      nowcount = #{record.nowcount,jdbcType=INTEGER},
      avgtime = #{record.avgtime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="qlw.model.Departmentqueue" >
    update departmentqueue
    <set >
      <if test="departmentname != null" >
        departmentname = #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null" >
        departmentid = #{departmentid,jdbcType=BIGINT},
      </if>
      <if test="hospitalname != null" >
        hospitalname = #{hospitalname,jdbcType=VARCHAR},
      </if>
      <if test="hospitalid != null" >
        hospitalid = #{hospitalid,jdbcType=BIGINT},
      </if>
      <if test="nowcount != null" >
        nowcount = #{nowcount,jdbcType=INTEGER},
      </if>
      <if test="avgtime != null" >
        avgtime = #{avgtime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="qlw.model.Departmentqueue" >
    update departmentqueue
    set departmentname = #{departmentname,jdbcType=VARCHAR},
      departmentid = #{departmentid,jdbcType=BIGINT},
      hospitalname = #{hospitalname,jdbcType=VARCHAR},
      hospitalid = #{hospitalid,jdbcType=BIGINT},
      nowcount = #{nowcount,jdbcType=INTEGER},
      avgtime = #{avgtime,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>